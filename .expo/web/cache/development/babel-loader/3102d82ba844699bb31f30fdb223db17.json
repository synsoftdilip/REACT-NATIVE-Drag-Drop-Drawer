{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\AndroidProject\\\\Expo\\\\TestTask2\\\\src\\\\DraggyInner.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport LayoutAnimation from \"react-native-web/dist/exports/LayoutAnimation\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\n\nvar DraggyInner = function (_React$Component) {\n  _inherits(DraggyInner, _React$Component);\n\n  var _super = _createSuper(DraggyInner);\n\n  function DraggyInner(props) {\n    var _this;\n\n    _classCallCheck(this, DraggyInner);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      color: []\n    };\n    return _this;\n  }\n\n  _createClass(DraggyInner, [{\n    key: \"render\",\n    value: function render() {\n      if (this.props.dragOver && !this.props.ghost && !this.props.dragging) {\n        LayoutAnimation.easeInEaseOut();\n        return React.createElement(View, {\n          style: {\n            width: this.props.dragOver ? 110 : 100,\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            height: this.props.dragOver ? 110 : 100,\n            backgroundColor: \"rgba(255,0,0,.7)\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }\n        }, React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }\n        }, React.createElement(View, {\n          style: styles.imageBg,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 18\n          }\n        }, React.createElement(Image, {\n          style: styles.imgCss,\n          source: {\n            uri: this.props.item.image\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }\n        })), React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 19\n          }\n        }, React.createElement(Text, {\n          style: styles.itemName,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 22\n          }\n        }, \" \", this.props.item.name, \" \"))));\n      }\n\n      var shadows = {\n        shadowColor: \"black\",\n        shadowOffset: {\n          width: 0,\n          height: 20\n        },\n        shadowOpacity: 0.5,\n        shadowRadius: 20,\n        opacity: 0.5\n      };\n      return React.createElement(View, {\n        style: [{\n          height: 100,\n          width: 100,\n          alignItems: \"center\",\n          justifyContent: \"center\"\n        }, this.props.dragging ? shadows : null],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.imageBg,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 18\n        }\n      }, React.createElement(Image, {\n        style: styles.imgCss,\n        source: {\n          uri: this.props.item.image\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }\n      })), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 19\n        }\n      }, React.createElement(Text, {\n        style: styles.itemName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 22\n        }\n      }, \" \", this.props.item.name, \" \"))));\n    }\n  }]);\n\n  return DraggyInner;\n}(React.Component);\n\nexport { DraggyInner as default };\nexport var styles = StyleSheet.create({\n  imageBg: {\n    backgroundColor: '#ddd',\n    width: 80,\n    height: 80,\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginRight: 20,\n    marginBottom: 10,\n    display: 'flex'\n  },\n  imgCss: {\n    width: 60,\n    height: 60\n  },\n  itemName: {\n    textAlign: 'center',\n    marginRight: 20,\n    marginBottom: 10\n  }\n});","map":{"version":3,"sources":["D:/AndroidProject/Expo/TestTask2/src/DraggyInner.tsx"],"names":["React","DraggyInner","props","state","color","dragOver","ghost","dragging","LayoutAnimation","easeInEaseOut","width","alignItems","justifyContent","height","backgroundColor","styles","imageBg","imgCss","uri","item","image","itemName","name","shadows","shadowColor","shadowOffset","shadowOpacity","shadowRadius","opacity","Component","StyleSheet","create","marginRight","marginBottom","display","textAlign"],"mappings":"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","sourcesContent":["import React,{Component} from \"react\";\r\nimport {\r\n  Text,\r\n  View,\r\n  LayoutAnimation,\r\n  StyleSheet,\r\n  Image\r\n} from \"react-native\";\r\n\r\n\r\n\r\ninterface draprops {\r\n  dragging?: any,\r\n  ghost?: any,\r\n  dragOver?: any,\r\n  item?:any,\r\n  index?: any\r\n}\r\n\r\ninterface draStatae {\r\n  color: any\r\n}\r\n\r\nexport default class DraggyInner extends React.Component<draprops,draStatae> {\r\n    constructor(props: draprops) {\r\n        super(props);\r\n        this.state = {\r\n          color: []\r\n        };\r\n    \r\n      }\r\n      render() {\r\n        if (this.props.dragOver && !this.props.ghost && !this.props.dragging) {\r\n          LayoutAnimation.easeInEaseOut();\r\n          return (\r\n            <View\r\n              style={{\r\n                width: this.props.dragOver ? 110 : 100,\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                height: this.props.dragOver ? 110 : 100,\r\n                backgroundColor: \"rgba(255,0,0,.7)\"\r\n              }}\r\n            >\r\n              <View>\r\n                 <View style = {styles.imageBg}>\r\n                        <Image style={styles.imgCss}  source={{uri : this.props.item.image}}/>\r\n                  </View>\r\n                  <View >\r\n                     <Text style= {styles.itemName}> {this.props.item.name} </Text>\r\n                  </View>\r\n            </View>\r\n            </View>\r\n          );\r\n        }\r\n        let shadows = {\r\n          shadowColor: \"black\",\r\n          shadowOffset: { width: 0, height: 20 },\r\n          shadowOpacity: 0.5,\r\n          shadowRadius: 20,\r\n          opacity: 0.5\r\n        };\r\n        return (\r\n          <View\r\n            style={[\r\n              {\r\n                height: 100,\r\n                width: 100,\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\"\r\n              },\r\n              this.props.dragging ? shadows : null\r\n            ]}\r\n          >\r\n            <View>\r\n                 <View style = {styles.imageBg}>\r\n                        <Image style={styles.imgCss}  source={{uri : this.props.item.image}}/>\r\n                  </View>\r\n                  <View >\r\n                     <Text style= {styles.itemName}> {this.props.item.name} </Text>\r\n                  </View>\r\n            </View>\r\n          </View>\r\n        );\r\n      }\r\n}\r\n\r\n\r\n/**\r\n * create styles css\r\n*/\r\nexport const styles = StyleSheet.create({\r\n  imageBg : {\r\n    backgroundColor: '#ddd',\r\n    width: 80,\r\n    height: 80,\r\n    alignItems:'center',\r\n    justifyContent: 'center',\r\n    marginRight: 20,\r\n    marginBottom: 10,\r\n    display: 'flex'\r\n  },\r\n  imgCss : {\r\n    width: 60,\r\n    height: 60\r\n  },\r\n\r\n  itemName: {\r\n    textAlign: 'center',\r\n    marginRight: 20,\r\n    marginBottom: 10,\r\n  }\r\n});"]},"metadata":{},"sourceType":"module"}