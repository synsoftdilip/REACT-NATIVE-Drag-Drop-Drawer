{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\AndroidProject\\\\Expo\\\\TestTask2\\\\node_modules\\\\react-native-drag-drop-and-swap\\\\src\\\\DragContainer.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport PropTypes from 'prop-types';\nglobal.Easing = Easing;\nvar allOrientations = ['portrait', 'portrait-upside-down', 'landscape', 'landscape-left', 'landscape-right'];\n\nvar DragModal = function (_React$Component) {\n  _inherits(DragModal, _React$Component);\n\n  var _super = _createSuper(DragModal);\n\n  function DragModal() {\n    _classCallCheck(this, DragModal);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(DragModal, [{\n    key: \"render\",\n    value: function render() {\n      var startPosition = this.props.content.startPosition;\n      return React.createElement(Modal, {\n        transparent: true,\n        supportedOrientations: allOrientations,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 12\n        }\n      }, React.createElement(TouchableWithoutFeedback, {\n        onPressIn: this.props.drop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }\n      }, React.createElement(Animated.View, {\n        style: this.props.location.getLayout(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }\n      }, this.props.content.children)));\n    }\n  }]);\n\n  return DragModal;\n}(React.Component);\n\nvar DragContainer = function (_React$Component2) {\n  _inherits(DragContainer, _React$Component2);\n\n  var _super2 = _createSuper(DragContainer);\n\n  function DragContainer(props) {\n    var _this;\n\n    _classCallCheck(this, DragContainer);\n\n    _this = _super2.call(this, props);\n    _this.displayName = 'DragContainer';\n    _this.containerLayout;\n    var location = new Animated.ValueXY();\n    _this.state = {\n      location: location\n    };\n    _this.dropZones = [];\n    _this.draggables = [];\n    _this.onDrag = _this.onDrag.bind(_assertThisInitialized(_this));\n    _this._handleDragging = _this._handleDragging.bind(_assertThisInitialized(_this));\n    _this._handleDrop = _this._handleDrop.bind(_assertThisInitialized(_this));\n    _this._listener = location.addListener(_this._handleDragging);\n    _this.updateZone = _this.updateZone.bind(_assertThisInitialized(_this));\n    _this.removeZone = _this.removeZone.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(DragContainer, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this._listener) this.state.location.removeListener(this._listener);\n    }\n  }, {\n    key: \"getDragContext\",\n    value: function getDragContext() {\n      return {\n        dropZones: this.dropZones,\n        onDrag: this.onDrag,\n        container: this.containerLayout,\n        dragging: this.state.draggingComponent,\n        updateZone: this.updateZone,\n        removeZone: this.removeZone\n      };\n    }\n  }, {\n    key: \"getChildContext\",\n    value: function getChildContext() {\n      return {\n        dragContext: this.getDragContext()\n      };\n    }\n  }, {\n    key: \"updateZone\",\n    value: function updateZone(details) {\n      var zone = this.dropZones.find(function (x) {\n        return x.ref === details.ref;\n      });\n\n      if (!zone) {\n        this.dropZones.push(details);\n      } else {\n        var i = this.dropZones.indexOf(zone);\n        this.dropZones.splice(i, 1, details);\n      }\n    }\n  }, {\n    key: \"removeZone\",\n    value: function removeZone(ref) {\n      var i = this.dropZones.find(function (x) {\n        return x.ref === ref;\n      });\n\n      if (i !== -1) {\n        this.dropZones.splice(i, 1);\n      }\n    }\n  }, {\n    key: \"inZone\",\n    value: function inZone(_ref, zone) {\n      var x = _ref.x,\n          y = _ref.y;\n      return zone.x <= x && zone.width + zone.x >= x && zone.y <= y && zone.height + zone.y >= y;\n    }\n  }, {\n    key: \"_addLocationOffset\",\n    value: function _addLocationOffset(point) {\n      if (!this.state.draggingComponent) return point;\n      return {\n        x: point.x + this.state.draggingComponent.startPosition.width / 2,\n        y: point.y + this.state.draggingComponent.startPosition.height / 2\n      };\n    }\n  }, {\n    key: \"_handleDragging\",\n    value: function _handleDragging(point) {\n      var _this2 = this;\n\n      this._point = point;\n      if (this._locked || !point) return;\n      this.dropZones.forEach(function (zone) {\n        if (_this2.inZone(point, zone)) {\n          zone.onEnter(point);\n        } else {\n          zone.onLeave(point);\n        }\n      });\n    }\n  }, {\n    key: \"_handleDrop\",\n    value: function _handleDrop() {\n      var _this3 = this;\n\n      var hitZones = [];\n      this.dropZones.forEach(function (zone) {\n        if (!_this3._point) return;\n\n        if (_this3.inZone(_this3._point, zone)) {\n          hitZones.push(zone);\n          zone.onDrop(_this3.state.draggingComponent.data);\n        }\n      });\n      if (this.props.onDragEnd) this.props.onDragEnd(this.state.draggingComponent, hitZones);\n\n      if (!hitZones.length && this.state.draggingComponent && this.state.draggingComponent.ref) {\n        this._locked = true;\n        return Animated.timing(this.state.location, {\n          duration: 400,\n          easing: Easing.elastic(1),\n          toValue: {\n            x: 0,\n            y: 0\n          }\n        }).start(function () {\n          _this3._locked = false;\n\n          _this3._handleDragging({\n            x: -100000,\n            y: -100000\n          });\n\n          _this3.setState({\n            draggingComponent: null\n          });\n        });\n      }\n\n      this._handleDragging({\n        x: -100000,\n        y: -100000\n      });\n\n      this.setState({\n        draggingComponent: null\n      });\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this4 = this;\n\n      this._panResponder = PanResponder.create({\n        onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {\n          if (_this4.state.draggingComponent) {\n            _this4._handleDrop();\n          }\n\n          return false;\n        },\n        onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder(evt, gestureState) {\n          return !!_this4.state.draggingComponent;\n        },\n        onPanResponderMove: function onPanResponderMove() {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          return Animated.event([null, {\n            dx: _this4.state.location.x,\n            dy: _this4.state.location.y\n          }]).apply(_this4, args);\n        },\n        onPanResponderTerminationRequest: function onPanResponderTerminationRequest(evt, gestureState) {\n          return true;\n        },\n        onPanResponderRelease: function onPanResponderRelease(evt, gestureState) {\n          if (!_this4.state.draggingComponent) return;\n\n          _this4._handleDrop();\n        }\n      });\n    }\n  }, {\n    key: \"onDrag\",\n    value: function onDrag(ref, children, data) {\n      var _this5 = this;\n\n      ref.measure(function () {\n        if (_this5._listener) _this5.state.location.removeListener(_this5._listener);\n        var location = new Animated.ValueXY();\n        _this5._listener = location.addListener(function (args) {\n          return _this5._handleDragging(_this5._addLocationOffset(args));\n        });\n        _this5._offset = {\n          x: arguments.length <= 4 ? undefined : arguments[4],\n          y: arguments.length <= 5 ? undefined : arguments[5]\n        };\n        location.setOffset(_this5._offset);\n\n        _this5.setState({\n          location: location,\n          draggingComponent: {\n            ref: ref,\n            data: data,\n            children: React.Children.map(children, function (child) {\n              return React.cloneElement(child, {\n                dragging: true\n              });\n            }),\n            startPosition: {\n              x: arguments.length <= 4 ? undefined : arguments[4],\n              y: arguments.length <= 5 ? undefined : arguments[5],\n              width: arguments.length <= 2 ? undefined : arguments[2],\n              height: arguments.length <= 3 ? undefined : arguments[3]\n            }\n          }\n        }, function () {\n          if (_this5.props.onDragStart) _this5.props.onDragStart(_this5.state.draggingComponent);\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this6 = this;\n\n      return React.createElement(View, _extends({\n        style: [{\n          flex: 1\n        }, this.props.style],\n        onLayout: function onLayout(e) {\n          return _this6.containerLayout = e.nativeEvent.layout;\n        }\n      }, this._panResponder.panHandlers, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 16\n        }\n      }), this.props.children, this.state.draggingComponent ? React.createElement(DragModal, {\n        content: this.state.draggingComponent,\n        location: this.state.location,\n        drop: this._handleDrop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 43\n        }\n      }) : null);\n    }\n  }]);\n\n  return DragContainer;\n}(React.Component);\n\nDragContainer.propTypes = {\n  onDragStart: PropTypes.func,\n  onDragEnd: PropTypes.func\n};\nDragContainer.childContextTypes = {\n  dragContext: PropTypes.any\n};\nexport default DragContainer;","map":{"version":3,"sources":["D:/AndroidProject/Expo/TestTask2/node_modules/react-native-drag-drop-and-swap/src/DragContainer.js"],"names":["React","PropTypes","global","Easing","allOrientations","DragModal","startPosition","props","content","drop","location","getLayout","children","Component","DragContainer","displayName","containerLayout","Animated","ValueXY","state","dropZones","draggables","onDrag","bind","_handleDragging","_handleDrop","_listener","addListener","updateZone","removeZone","removeListener","container","dragging","draggingComponent","dragContext","getDragContext","details","zone","find","x","ref","push","i","indexOf","splice","y","width","height","point","_point","_locked","forEach","inZone","onEnter","onLeave","hitZones","onDrop","data","onDragEnd","length","timing","duration","easing","elastic","toValue","start","setState","_panResponder","PanResponder","create","onStartShouldSetPanResponder","onMoveShouldSetPanResponder","evt","gestureState","onPanResponderMove","args","event","dx","dy","apply","onPanResponderTerminationRequest","onPanResponderRelease","measure","_addLocationOffset","_offset","setOffset","Children","map","child","cloneElement","onDragStart","flex","style","e","nativeEvent","layout","panHandlers","propTypes","func","childContextTypes","any"],"mappings":"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","sourcesContent":["/*\n * @Author: Ranvir Gorai \n * @Date: 2018-01-30 15:04:08 \n * @Last Modified by: Ranvir Gorai \n * @Last Modified time: 2018-01-30 15:04:08 \n */\nimport React from 'react';\nimport {\n  View,\n  PanResponder,\n  Modal,\n  Easing,\n  Animated,\n  TouchableOpacity,\n  TouchableWithoutFeedback,\n} from 'react-native';\nimport PropTypes from 'prop-types';\n\nglobal.Easing = Easing;\n\nconst allOrientations = [\n  'portrait', 'portrait-upside-down',\n  'landscape', 'landscape-left', 'landscape-right'\n];\n\nclass DragModal extends React.Component {\n  render() {\n    let {startPosition} = this.props.content;\n    return <Modal transparent={true} supportedOrientations={allOrientations}>\n        <TouchableWithoutFeedback onPressIn={this.props.drop}>\n          <Animated.View style={this.props.location.getLayout()}>\n            {this.props.content.children}\n          </Animated.View>\n        </TouchableWithoutFeedback>\n    </Modal>\n  }\n}\n\n\nclass DragContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.displayName = 'DragContainer';\n        this.containerLayout;\n       \n        let location = new Animated.ValueXY();\n\n        this.state = {\n          location\n        }\n        this.dropZones = [];\n        this.draggables = [];\n        this.onDrag = this.onDrag.bind(this);\n        this._handleDragging = this._handleDragging.bind(this);\n        this._handleDrop = this._handleDrop.bind(this);\n        this._listener = location.addListener(this._handleDragging);\n        this.updateZone = this.updateZone.bind(this);\n        this.removeZone = this.removeZone.bind(this);\n    }\n\n    static propTypes = {\n      onDragStart: PropTypes.func,\n      onDragEnd: PropTypes.func,\n    }\n\n    componentWillUnmount() {\n      if (this._listener) this.state.location.removeListener(this._listener);\n    }\n\n    getDragContext() {\n      return {\n        dropZones: this.dropZones,\n        onDrag: this.onDrag,\n        container: this.containerLayout,\n        dragging: this.state.draggingComponent,\n        updateZone: this.updateZone,\n        removeZone: this.removeZone\n      }\n    }\n\n    getChildContext() {\n      return {dragContext: this.getDragContext()}    \n    }\n\n    static childContextTypes = {\n      dragContext: PropTypes.any\n    }\n\n\n    updateZone(details) {\n      let zone = this.dropZones.find(x => x.ref === details.ref);\n      if (!zone) {\n        this.dropZones.push(details);\n      } else {\n        let i = this.dropZones.indexOf(zone);\n        this.dropZones.splice(i, 1, details);\n      }\n    }\n\n    removeZone(ref) {\n      let i = this.dropZones.find(x => x.ref === ref);\n      if (i !== -1) {\n        this.dropZones.splice(i, 1);\n      }\n    }\n\n    inZone({x, y}, zone) {\n      return zone.x <= x && (zone.width + zone.x) >= x && zone.y <= y && (zone.height + zone.y) >= y;\n    }\n    _addLocationOffset(point) {\n      if (!this.state.draggingComponent) return point;\n      return {\n        x: point.x + (this.state.draggingComponent.startPosition.width / 2),\n        y: point.y + (this.state.draggingComponent.startPosition.height / 2),\n      }\n    }\n\n    _handleDragging(point) {\n      this._point = point;\n      if (this._locked || !point) return;\n      this.dropZones.forEach((zone) => {\n        if (this.inZone(point, zone)) {\n          zone.onEnter(point);\n        } else {\n          zone.onLeave(point);\n        }\n      })\n    }\n\n    _handleDrop() {\n      let hitZones = []\n      this.dropZones.forEach((zone) => {\n        if (!this._point) return;\n        if (this.inZone(this._point, zone)) {\n          hitZones.push(zone);\n          zone.onDrop(this.state.draggingComponent.data);\n        }\n      })\n      if (this.props.onDragEnd) this.props.onDragEnd(this.state.draggingComponent, hitZones);\n      if (!hitZones.length && this.state.draggingComponent && this.state.draggingComponent.ref) {\n        this._locked = true;\n        return Animated\n          .timing(this.state.location, {\n            duration: 400,\n            easing:Easing.elastic(1),\n            toValue: {\n              x: 0, //this._offset.x - x,\n              y: 0 //his._offset.y - y\n            }\n          }).start(() => {\n              this._locked = false;\n              this._handleDragging({x: -100000, y: -100000});\n              this.setState({\n                draggingComponent: null\n              })\n          })\n        \n      }\n      this._handleDragging({x: -100000, y: -100000});\n      this.setState({\n        draggingComponent: null\n      })\n    }\n\n    componentWillMount() {\n      this._panResponder = PanResponder.create({\n        // Ask to be the responder:\n        onStartShouldSetPanResponder: () => {\n          if (this.state.draggingComponent) {\n            this._handleDrop();\n          }\n          return false\n        },\n        onMoveShouldSetPanResponder: (evt, gestureState) => !!this.state.draggingComponent,\n//        onMoveShouldSetPanResponderCapture: (evt, gestureState) => true,\n        onPanResponderMove: (...args) => Animated.event([null, {\n           dx: this.state.location.x, // x,y are Animated.Value\n           dy: this.state.location.y,\n         }]).apply(this, args),\n        onPanResponderTerminationRequest: (evt, gestureState) => true,\n        onPanResponderRelease: (evt, gestureState) => {\n          if (!this.state.draggingComponent) return;\n          //Ensures we exit all of the active drop zones\n          this._handleDrop();\n        }\n      });\n  }\n\n    onDrag(ref, children, data) {\n      ref.measure((...args) => {\n        if (this._listener) this.state.location.removeListener(this._listener);\n        let location = new Animated.ValueXY();\n        this._listener = location.addListener(args => this._handleDragging(this._addLocationOffset(args)));\n        this._offset = {x: args[4], y: args[5]};\n        location.setOffset(this._offset);\n      \n        this.setState({\n          location,\n          draggingComponent: {\n          ref,\n          data,\n          children: React.Children.map(children, child => {\n            return React.cloneElement(child, {dragging: true})\n          }),\n          startPosition: {\n            x: args[4],\n            y: args[5],\n            width: args[2],\n            height: args[3]\n          }\n        }}, () => {\n          if (this.props.onDragStart) this.props.onDragStart(this.state.draggingComponent);\n        })\n      });\n    }\n\n    render() {\n        return <View style={[{flex: 1}, this.props.style]} onLayout={e => this.containerLayout = e.nativeEvent.layout} {...this._panResponder.panHandlers}>\n          {this.props.children}\n          {this.state.draggingComponent ? <DragModal content={this.state.draggingComponent} location={this.state.location} drop={this._handleDrop} /> : null}\n        </View>;\n    }\n}\n\nexport default DragContainer;\n"]},"metadata":{},"sourceType":"module"}