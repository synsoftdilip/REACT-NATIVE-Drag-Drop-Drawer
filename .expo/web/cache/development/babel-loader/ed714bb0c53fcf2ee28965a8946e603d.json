{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from \"react\";\nexport function droppable(Consumer) {\n  var BaseDroppable = function (_React$Component) {\n    _inherits(BaseDroppable, _React$Component);\n\n    var _super = _createSuper(BaseDroppable);\n\n    function BaseDroppable(props) {\n      var _this;\n\n      _classCallCheck(this, BaseDroppable);\n\n      _this = _super.call(this, props);\n\n      _this.onLayout = function () {\n        if (_this.props.onLayout) {\n          var _this$props;\n\n          (_this$props = _this.props).onLayout.apply(_this$props, arguments);\n        }\n\n        _this.measure();\n      };\n\n      _this.handleRef = function (element) {\n        if (element && element.getNode) {\n          _this.element = element.getNode();\n        } else {\n          _this.element = element;\n        }\n      };\n\n      _this.computeDistance = function () {\n        var _this$props$__dndCont = _this.props.__dndContext,\n            currentDragging = _this$props$__dndCont.currentDragging,\n            getDraggable = _this$props$__dndCont.getDraggable,\n            getDroppable = _this$props$__dndCont.getDroppable;\n\n        if (!currentDragging) {\n          return;\n        }\n\n        var draggable = getDraggable(currentDragging);\n        var droppable = getDroppable(_this.identifier);\n\n        if (!draggable || !droppable) {\n          return;\n        }\n\n        return Math.sqrt(Math.pow(draggable.layout.x - droppable.layout.x, 2) + Math.pow(draggable.layout.y - droppable.layout.y, 2));\n      };\n\n      _this.identifier = _this.props.customId || Symbol(\"droppable\");\n      return _this;\n    }\n\n    _createClass(BaseDroppable, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        this.props.__dndContext.registerDroppable(this.identifier, {\n          onDrop: this.props.onDrop,\n          onEnter: this.props.onEnter,\n          onLeave: this.props.onLeave\n        });\n      }\n    }, {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        this.props.__dndContext.unregisterDroppable(this.identifier);\n      }\n    }, {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate(prevProps) {\n        var updatedDroppable = {};\n\n        if (prevProps.onEnter !== this.props.onEnter) {\n          updatedDroppable.onEnter = this.props.onEnter;\n        }\n\n        if (prevProps.onDrop !== this.props.onDrop) {\n          updatedDroppable.onDrop = this.props.onDrop;\n        }\n\n        if (prevProps.onLeave !== this.props.onLeave) {\n          updatedDroppable.onLeave = this.props.onLeave;\n        }\n\n        if (Object.keys(updatedDroppable).length !== 0) {\n          this.props.__dndContext.updateDroppable(this.identifier, updatedDroppable);\n        }\n      }\n    }, {\n      key: \"measure\",\n      value: function measure() {\n        var _this2 = this;\n\n        if (this.element) {\n          this.element.measureInWindow(function (x, y, width, height) {\n            _this2.props.__dndContext.updateDroppable(_this2.identifier, {\n              layout: {\n                x: x,\n                y: y,\n                width: width,\n                height: height\n              }\n            });\n          });\n        }\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var children = this.props.children;\n        return children({\n          computeDistance: this.computeDistance,\n          active: this.props.__dndContext.currentDropping === this.identifier,\n          viewProps: {\n            onLayout: this.onLayout,\n            ref: this.handleRef,\n            style: {\n              zIndex: -1\n            }\n          }\n        });\n      }\n    }]);\n\n    return BaseDroppable;\n  }(React.Component);\n\n  BaseDroppable.defaultProps = {\n    bounceBack: true\n  };\n  var Droppable = React.forwardRef(function (props, ref) {\n    return React.createElement(Consumer, null, function (dndContext) {\n      return React.createElement(BaseDroppable, _extends({}, props, {\n        ref: ref,\n        __dndContext: dndContext\n      }));\n    });\n  });\n  Droppable.displayName = \"ConnectedDroppable\";\n  return Droppable;\n}","map":{"version":3,"sources":["D:/AndroidProject/Expo/TestTask/taskbox/node_modules/react-native-easy-dnd/lib/droppable.js"],"names":["React","droppable","Consumer","BaseDroppable","props","onLayout","measure","handleRef","element","getNode","computeDistance","__dndContext","currentDragging","getDraggable","getDroppable","draggable","identifier","Math","sqrt","pow","layout","x","y","customId","Symbol","registerDroppable","onDrop","onEnter","onLeave","unregisterDroppable","prevProps","updatedDroppable","Object","keys","length","updateDroppable","measureInWindow","width","height","children","active","currentDropping","viewProps","ref","style","zIndex","Component","defaultProps","bounceBack","Droppable","forwardRef","createElement","dndContext","displayName"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nexport function droppable(Consumer) {\n    class BaseDroppable extends React.Component {\n        constructor(props) {\n            super(props);\n            this.onLayout = (...args) => {\n                if (this.props.onLayout) {\n                    this.props.onLayout(...args);\n                }\n                this.measure();\n            };\n            this.handleRef = (element) => {\n                if (element && element.getNode) {\n                    this.element = element.getNode();\n                }\n                else {\n                    this.element = element;\n                }\n            };\n            this.computeDistance = () => {\n                const { currentDragging, getDraggable, getDroppable } = this.props.__dndContext;\n                if (!currentDragging) {\n                    return;\n                }\n                const draggable = getDraggable(currentDragging);\n                const droppable = getDroppable(this.identifier);\n                if (!draggable || !droppable) {\n                    return;\n                }\n                return Math.sqrt(Math.pow((draggable.layout.x - droppable.layout.x), 2) +\n                    Math.pow((draggable.layout.y - droppable.layout.y), 2));\n            };\n            this.identifier = this.props.customId || Symbol(\"droppable\");\n        }\n        componentDidMount() {\n            this.props.__dndContext.registerDroppable(this.identifier, {\n                onDrop: this.props.onDrop,\n                onEnter: this.props.onEnter,\n                onLeave: this.props.onLeave\n            });\n        }\n        componentWillUnmount() {\n            this.props.__dndContext.unregisterDroppable(this.identifier);\n        }\n        componentDidUpdate(prevProps) {\n            const updatedDroppable = {};\n            if (prevProps.onEnter !== this.props.onEnter) {\n                updatedDroppable.onEnter = this.props.onEnter;\n            }\n            if (prevProps.onDrop !== this.props.onDrop) {\n                updatedDroppable.onDrop = this.props.onDrop;\n            }\n            if (prevProps.onLeave !== this.props.onLeave) {\n                updatedDroppable.onLeave = this.props.onLeave;\n            }\n            if (Object.keys(updatedDroppable).length !== 0) {\n                this.props.__dndContext.updateDroppable(this.identifier, updatedDroppable);\n            }\n        }\n        measure() {\n            if (this.element) {\n                this.element.measureInWindow((x, y, width, height) => {\n                    this.props.__dndContext.updateDroppable(this.identifier, {\n                        layout: { x, y, width, height }\n                    });\n                });\n            }\n        }\n        render() {\n            const { children } = this.props;\n            return children({\n                computeDistance: this.computeDistance,\n                active: this.props.__dndContext.currentDropping === this.identifier,\n                viewProps: {\n                    onLayout: this.onLayout,\n                    ref: this.handleRef,\n                    style: {\n                        zIndex: -1\n                    }\n                }\n            });\n        }\n    }\n    BaseDroppable.defaultProps = {\n        bounceBack: true\n    };\n    const Droppable = React.forwardRef((props, ref) => (React.createElement(Consumer, null, dndContext => (React.createElement(BaseDroppable, Object.assign({}, props, { ref: ref, __dndContext: dndContext }))))));\n    Droppable.displayName = \"ConnectedDroppable\";\n    return Droppable;\n}\n"]},"metadata":{},"sourceType":"module"}